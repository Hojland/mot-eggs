name: build

on:
  release:
    types: [created]
  workflow_dispatch:

env:
  PROJECT_ID: mot-demo-1
  IMAGE: hojland/mot-eggs
  GKE_CLUSTER: demo
  GKE_ZONE: europe-west4a
  GKE_SA_KEY: ${{ secrets.GKE_SA_KEY }}

jobs:
  build-publish:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    #    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    outputs:
      release_tag: ${{ steps.fetch-latest-release.outputs.latest-release }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - id: fetch-latest-release
        run: |
          git fetch --tags
          export LATEST_RELEASE_VERSION=$(git describe --tags $(git rev-list --tags --max-count=1))
          echo "::set-output name=latest-release::$(echo $LATEST_RELEASE_VERSION)"
          echo The latest release version is \"$LATEST_RELEASE_VERSION\".
        shell: bash

      # Setup gcloud CLI
      - uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
        with:
          service_account_key: ${{ secrets.GKE_SA_KEY }}
          project_id: ${{ env.PROJECT_ID }}

      # Configure docker to use the gcloud command-line tool as a credential helper
      - run: |-
          gcloud --quiet auth configure-docker
      # Build the Docker image
      - name: Build
        run: |-
          cd app
          docker build \
            --tag "$IMAGE:${{ steps.fetch-latest-release.outputs.latest-release }}" \
            .
      # Push the Docker image to Google Container Registry
      - name: Publish
        run: |-
          docker push "$IMAGE:${{ steps.fetch-latest-release.outputs.latest-release }}"